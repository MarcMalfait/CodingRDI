000100200306       //------------------------------------------------------------
000101200310       // Copyright (C) MMAFIN1
000102200306       //
000103200306       // This is a single page(non elastic) subfile written
000104200306       // using sql(Without using any native I/O) and free form RPG.
000105200306       //
000106200306       //------------------------------------------------------------
000107200306       //   Control Specification
000108200306       //------------------------------------------------------------
000109200306
000110200306       ctl-opt dftactgrp(*no) optimize(*none);
000111200306
000112200306       //------------------------------------------------------------
000113200306       //------------------------------------------------------------
000114200306       //   File Specification
000115200306       //------------------------------------------------------------
000116200306
000117200306       dcl-f TSTSFLFM workstn sfile(SFL01:rrn) infDs(infdata)
000118200306                      indDs(indicatiors);
000119200306
000120200306       //------------------------------------------------------------
000121200306       //------------------------------------------------------------
000122200306       //   Variable Specification
000123200306       //------------------------------------------------------------
000124200306
000125200306       dcl-s rrn   zoned(5:0);
000126200306
000127200306       // Function Key definition...
000128200306       dcl-c key_Exit    const(x'33');
000129200306       dcl-c key_enter   Const(x'F1');
000130200306       dcl-c key_pageUp  Const(x'F4');
000131200306       dcl-c key_pageDn  Const(x'F5');
000132200306       dcl-c key_refresh Const(x'35');
000133200306
000134200306       //------------------------------------------------------------
000135200306       //------------------------------------------------------------
000136200306       //   Date Structures
000137200306       //------------------------------------------------------------
000138200306
000139200306       // File information data structure...
000140200306       dcl-ds infdata;
000141200306         key_pressed char(1) pos(369);
000142200306       end-ds;
000143200306
000144200306       // indicator information data structure...
000145200306       dcl-ds indicatiors;
000146200306         sfl_Clear ind pos(40);
000147200306         sfl_Dsply ind pos(41);
000148200306         sfl_DsCon ind pos(42);
000149200306         sfl_End   ind pos(45);
000150200306       end-ds;
000151200306
000152200306       // Display fields data structure...
000153200306       dcl-ds dsp_fields;
000154200306         $CUSCODE zoned(10:0);
000155200306         $CUSNAME char(30);
000156200306         $CUSBDAY zoned(8:0);
000157200306         $CUSCON1 zoned(10:0);
000158200306       end-ds;
000159200306
000160200306       //------------------------------------------------------------
000161200306       //------------------------------------------------------------
000162200306       //   Begining of the main Program...
000163200306       //------------------------------------------------------------
000164200306
000165200306       exec sql set option commit = *none, closqlcsr = *endmod;
000166200306       key_pressed = key_enter;
000167200306       dow key_Exit <> key_pressed;
000168200306         if key_pressed = key_enter;
000169200306           clear_sfl();
000170200306           build_csr();
000171200306           fetch_Fst_pgDnEn();
000172200306           build_sfl();
000173200306           dsply_sfl();
000174200306         elseif key_pressed = key_refresh;
000175200306           ACUSCODE = 0;
000176200306           clear_sfl();
000177200306           build_csr();
000178200306           fetch_Fst_pgDnEn();
000179200306           build_sfl();
000180200306           dsply_sfl();
000181200306         elseif key_pressed = key_pageUp;
000182200306           process_pageUp();
000183200306           dsply_sfl();
000184200306         elseif key_pressed = key_pageDn;
000185200306           process_pageDn();
000186200306           dsply_sfl();
000187200306         else;
000188200306           dsply_sfl();
000189200306         endif;
000190200306       enddo;
000191200306       *inlr = '1';
000192200306
000193200306       //------------------------------------------------------------
000194200306       //------------------------------------------------------------
000195200306       //   Clear Subfile procedure...
000196200306       //------------------------------------------------------------
000197200306
000198200306       dcl-proc clear_sfl;
000199200306         sfl_Clear = *on;
000200200306         write SFLCTL;
000201200306         sfl_Clear = *off;
000202200306       end-proc;
000203200306
000204200306       //------------------------------------------------------------
000205200306       //------------------------------------------------------------
000206200306       //   Build Subfile procedure...
000207200306       //------------------------------------------------------------
000208200306
000209200306       dcl-proc build_sfl;
000210200306
000211200306         dow sqlcode >= 0 and sqlcode < 100;
000212200306           rrn += 1;
000213200306           write SFL01;
000214200306           if rrn = 10;
000215200306             leave;
000216200306           endif;
000217200306           exec sql fetch next from c1 into :dsp_fields;
000218200306         enddo;
000219200306
000220200306         // Check whether the last record or not...
000221200306         exec sql fetch next from c1 into :dsp_fields;
000222200306         if sqlcode = 100 ;
000223200306           rrn += 1;
000224200306           sfl_End   = *on;
000225200311           if (%Subst(sqlcode:1:2) = '02');
000226200311              sfl_Clear = *on;
000228200311              write SFLCTL;
000229200311           endif;
000230200306         else;
000231200306           // If not the last record set the cursor to previous position.
000232200306           exec sql fetch prior from c1 into :dsp_fields;
000233200306         endif;
000234200306
000235200306       end-proc;
000236200306
000237200306       //------------------------------------------------------------
000238200306       //------------------------------------------------------------
000239200306       //   Display Subfile procedure...
000240200306       //------------------------------------------------------------
000241200306
000242200306       dcl-proc dsply_sfl;
000243200306
000244200306         write bottom;
000245200306         sfl_Dsply = *on;
000246200306         sfl_DsCon = *on;
000247200306         exfmt SFLCTL;
000248200306         AERRDSP  = ' ';
000249200306
000250200306       end-proc;
000251200306
000252200306       //------------------------------------------------------------
000253200306       //------------------------------------------------------------
000254200306       //   Declare cursor procedure...
000255200306       //------------------------------------------------------------
000256200306
000257200306       dcl-proc build_csr;
000258200306
000259200306         exec sql close c1;
000260200306         exec sql declare c1 scroll cursor for
000261200306                  select CUSCODE, CUSNAME, CUSBDAY, CUSCON1
000262200306                      from MMAFIN1.CSTMR_TBL
000263200306                      where CUSCODE >= :ACUSCODE
000264200306                      order by CUSCODE
000265200306                      FOR READ ONLY;
000266200306         exec sql open c1;
000267200306
000268200306       end-proc;
000269200306
000270200306       //------------------------------------------------------------
000271200306       //------------------------------------------------------------
000272200306       //   Fetch first reocrd for 'page down' and 'enter' keys
000273200306       //------------------------------------------------------------
000274200306
000275200306       dcl-proc fetch_Fst_pgDnEn;
000276200306
000277200306         sfl_End = *off;
000278200306         rrn = 0 ;
000279200306         exec sql fetch next from c1 into :dsp_fields;
000280200306
000281200306       end-proc;
000282200306
000283200306       //------------------------------------------------------------
000284200306       //------------------------------------------------------------
000285200306       //------------------------------------------------------------
000286200306       //   Fetch first reocrd for 'page up' Key
000287200306       //------------------------------------------------------------
000288200306
000289200306       dcl-proc fetch_Fst_pgUp;
000290200306         dcl-pi *n char(1) end-pi;
000291200306
000292200306         if rrn <> 0;
000293200306           rrn += 9 ;
000294200306         else;
000295200306           rrn = 11;
000296200306         endif;
000297200306         // Make the 'rrn' negative, to point the cursor to 'rrn' number of
000298200306         // rows before the last fetch
000299200306         rrn *= -1;
000300200306         // Set the cursor location...
000301200306         exec sql fetch relative :rrn from c1 into :dsp_fields;
000302200306
000303200306         // If the cursor already in the top the list
000304200306         if sqlcode = 100;
000305200306           rrn = 0 ;
000306200306           exec sql fetch first from c1 into :dsp_fields;
000307200306
000308200306           // Point the cursor to 9 Rows after the last fetch.
000309200306           exec sql fetch relative +9  from c1 into :dsp_fields;
000310200306
000311200306           AERRDSP  = 'You have reached the top of the list.';
000312200306           return '1';
000313200306         endif;
000314200306         sfl_End = *off;
000315200306         rrn = 0 ;
000316200306         return ' ';
000317200306
000318200306       end-proc;
000319200306
000320200306       //------------------------------------------------------------
000321200306       //------------------------------------------------------------
000322200306       //   Page down procedure...
000323200306       //------------------------------------------------------------
000324200306
000325200306       dcl-proc process_pageDn;
000326200306
000327200306         if sfl_End = *on;
000328200306           AERRDSP  = 'You have reached the bottom of the list.';
000329200306           return;
000330200306         endif;
000331200306         clear_sfl();
000332200306         fetch_Fst_pgDnEn();
000333200306         build_sfl();
000334200306
000335200306       end-proc;
000336200306
000337200306       //------------------------------------------------------------
000338200306       //------------------------------------------------------------
000339200306       //   Page up procedure...
000340200306       //------------------------------------------------------------
000341200306
000342200306       dcl-proc process_pageUp;
000343200306
000344200306         // Buid the subfile only if the first record successfully fetched
000345200306         if fetch_Fst_pgUp() = ' ';
000346200306           clear_sfl();
000347200306           build_sfl();
000348200306         endif;
000349200306
000350200306       end-proc;
000351200306
000352200306       //------------------------------------------------------------
000353200306
